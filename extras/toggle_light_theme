#!/usr/bin/env bash

#
# Toggles between dark and bright colorscheme.
#

CONF_DIR=${XDG_CONFIG_HOME:-$HOME/.config}
CONF_DIR_FISH="${CONF_DIR}/fish"

GTK_THEME_DARK="${GTK_THEME_DARK:-Adwaita-dark}"
GTK_THEME_BRIGHT="${GTK_THEME_BRIGHT:-Adwaita}"

ALACRITTY_THEME_DARK=${ALACRITTY_THEME_DARK:-moep_dark}
ALACRITTY_THEME_BRIGHT=${ALACRITTY_THEME_BRIGHT:-moep_bright}

DEBUG_MODE=false

# END OF MANUAL CONFIG 
set -e
set -u
set -o pipefail
#set -x

CONF_XSETTINGSD="${CONF_DIR}/xsettingsd/xsettingsd.conf"
CONF_ALACRITTY="${CONF_DIR}/alacritty/alacritty.yml"

opt_dark=false
opt_bright=false

function usage() {
  echo "Usage: "
  echo "  $0 dark|bright"
}

function log_d() {
  if ! ${DEBUG_MODE}; then
    return
  fi

  prinf "DEBUG: %s\r\n" "$1"
}

function print_config() {
  printf "%-20s%s\r\n" "CONF_DIR_FISH" "${CONF_DIR_FISH}"
  printf "%-20s%s\r\n" "GTK_THEME_DARK" "${GTK_THEME_DARK}"
  printf "%-20s%s\r\n" "GTK_THEME_BRIGHT" "${GTK_THEME_BRIGHT}"
  printf "%-20s%s\r\n" "DEBUG_MODE" "${DEBUG_MODE}"

  if ${opt_bright}; then
    echo "bright mode"
  fi
  if ${opt_dark}; then
    echo "dark mode"
  fi

  echo
  echo "-- ${CONF_XSETTINGSD} --------------------------"
  cat ${CONF_XSETTINGSD}
  echo
}

function parse_params() {
  while [ $# -gt 0 ]; do
    case "$1" in
      -h|-?|--help)
        usage
        exit 0
      ;;
      dark)
        opt_dark=true
        shift
      ;;
      bright)
        opt_bright=true
        shift
      ;;
      *)
        usage
        exit 1
      ;;
    esac

    if ${opt_dark} && ${opt_bright}; then
      usage
      exit 1
    fi

  done
}


function refresh_alacritty() {
  local alacritty_theme

  if $opt_dark; then
    alacritty_theme=${ALACRITTY_THEME_DARK}
  else
    alacritty_theme=${ALACRITTY_THEME_BRIGHT}
  fi

  sed -E -i.bak 's/^(colors:)(.+)/\1 *'${alacritty_theme}'/g' "${CONF_ALACRITTY}" && rm "${CONF_ALACRITTY}.bak"
}

function refresh_gtk() {
  local gtk_theme

  if $opt_dark; then 
    gtk_theme=${GTK_THEME_DARK}
  else 
    gtk_theme=${GTK_THEME_BRIGHT}
  fi

  log_d "Applying GTK theme ${gtk_theme}"

  # Running process will be replaced automatically
  xsettingsd > /dev/null 2>&1 &
  sed -E -i.bak 's@^(Net/ThemeName) "(.+)"@\1 "'${gtk_theme}'"@g' "${CONF_XSETTINGSD}" && rm "${CONF_XSETTINGSD}.bak"
}

function refresh_i3() {
  i3-msg reload > /dev/null 2>&1
}

function refresh_fish() {
  # TODO replace hard coded colors

  # see https://fishshell.com/docs/current/interactive.html?highlight=fish_color_command
  if $opt_dark; then
    echo "xxx"
    fish << EOF
  set -U fish_color_normal normal         
  set -U fish_color_command normal --bold
  set -U fish_color_keyword magenta --bold
  set -U fish_color_quote normal 
  set -U fish_color_redirection cccccc
  set -U fish_color_end magenta --bold
  set -U fish_color_error brred
  set -U fish_color_param dadada
  set -U fish_color_comment 999999
  set -U fish_color_selection black --background=normal
  # ...
  set -U fish_color_operator magenta --bold
  set -U fish_color_escape magenta --bold
  set -U fish_color_autosuggestion 585858
  # ...
  set -U fish_color_search_match --background=red
  set -U fish_color
  #set -U fish_color

  set -U fish_pager_color_completion white
  set -U fish_pager_color_background --background=normal
  set -U fish_pager_color_selected_prefix normal
  set -U fish_pager_color_selected_background --background=white
EOF
  else
  fish << EOF

EOF
  fi
}

function main() {
  parse_params "$@"
  #print_config
  
  # TODO if desktop mode
  refresh_alacritty
  refresh_gtk
  refresh_i3
  refresh_fish
}

main "$@"

